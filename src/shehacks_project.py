# -*- coding: utf-8 -*-
"""SheHacks Project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VPli6XYNZZpMi1lwGB8zIPvu-gX3KSHJ
"""

# functions for calculating growth over time
# savings account compounding
def compInt(P, t, r=0.005):
  if r>0.03 or r<0:
    print("Interest rate is unrealistic.")
  else :
    A = [] # final amount at each time period
    #A.append(P)
    for k in range(t) :
      A.append(P*(1+r)**k)
    return A

# ETF compounding
def ETF(P,t):
  from random import gauss 
  A = [] # final amount at each time period
  A.append(P)
  for k in range(t):
    randRate = gauss(0.07, 0.1) 
    A.append(A[k] * (1+randRate))
  
  return A

# stock
def Stock(P,t):
  #from random import gauss 
  from random import gauss 
  A = [] # final amount at each time period
  A.append(P)
  for k in range(t):
    randRate = gauss(0.1, 0.25) 
    A.append(A[k] * (1+randRate))
  
  return A

# function to plot the comparison
def plotComparison(savAcc, etf, stock):
  import matplotlib.pyplot as plt
  plt.plot(sav, label='savings account')
  plt.plot(etf, label='ETF')
  plt.plot(stock, label='stock')
  plt.legend()
  plt.xlabel("Years")
  plt.ylabel("Value")

# test functions
P=1000
r=0.1
t=20 
sav = compInt(P, t,r=0.005)
etf = ETF(P, t)
stock = Stock(P, t)
print(sav)
print(etf)
print(stock)

import matplotlib.pyplot as plt
plt.plot(sav, label='savings account')
plt.plot(etf, label='ETF')
plt.plot(stock, label='stock')
plt.legend()
plt.xlabel("Years")
plt.ylabel("Value")

plotComparison(sav, etf, stock)
#woohooo!